(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>a});var r=t(537),A=t.n(r),o=t(645),i=t.n(o)()(A());i.push([n.id,":root {\n    --twitter-blue: #1DA1F2;\n    --sidebar-clr: rgb(36, 36, 36);\n}\n\n*{\n    padding: 0px;\n    margin: 0px;\n    box-sizing: border-box;\n}\n\nbody {\n    width: 100vw;\n    height: 100vh;\n    margin: 0px;\n    background-color: rgb(51, 51, 51);\n    color: rgb(219, 219, 219);\n}\n\n.centered {\n    position: fixed;\n    top: 25%;\n    left: 50%;\n    /* bring your own prefixes */\n    transform: translate(-50%, -50%);\n  }\n\n.hidden {\n    visibility: hidden;\n    opacity: 0;\n}\n\na{\n    color: var(--twitter-blue);\n}\n\n.highlight {\n    color: white;\n}\n\nbutton {\n    cursor: pointer;\n    font-weight: bolder;\n    background-color: transparent;\n    border: none;\n}\n\n#taskBtn {\n    background-color: var(--twitter-blue);\n    border-radius: 15px;\n    padding: 2vh 3vw 2vh 3vw;\n}\n\n#sidebar {\n    top: 0px;\n    left: 0px;\n    width: 15vw;\n    height: 100vh;\n    border-right: 1px solid black;\n    position: fixed;\n    background-color: var(--sidebar-clr);\n}\n\n#topStuff {\n    height: 30vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-evenly;\n}\n\n#profileStuff {\n    display: flex;\n    align-items: center;\n}\n\n#profilePic {\n    border-radius: 50%;\n    width: 4vw;\n    height: 4vw;\n}\n\n#bottomStuff {\n    height: 70vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-evenly;\n}\n\n#content {\n    width: 85vw;\n    height: 100vh;\n    position: absolute;\n    left: 15vw;\n}\n\n.contentDiv {\n    opacity: 0;\n    visibility: none;\n    border-radius: 10px;\n    height: 80vh;\n    width: 30vw;\n    background-color: var(--sidebar-clr);\n    position: fixed;\n    left: 18vw;\n    top: 10vh;\n}\n\n.contentDiv.active {\n    opacity: 1;\n    visibility: visible;\n}\n\n#sideDiv {\n    left: 55vw;\n}\n\n.date-picker {\n    width: 100%;\n    max-width: 320px;\n    height: 60px;\n    z-index: 30;\n    position: relative;\n    background-color: #fff;\n    box-shadow: 0px 3px 10px rgba(0, 0, 0, 0.2);\n    cursor: pointer;\n    user-select: none;\n    display: none;\n}\n\n.date-picker.active {\n    display: block;\n}\n\n.date-picker .selected-date {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: #313131;\n    font-size: 28px;\n}\n\n.date-picker:hover {\n    background-color: #F3F3F3;\n}\n\n#submitBtn {\n    height: 8vh;\n}\n\n#submitBtn:hover {\n    background-color: #F3F3F3;\n}\n\n.date-picker .dates {\n    display: none;\n    position: absolute;\n    top: 100%;\n    left: 0;\n    right: 0;\n    background-color: #fff;\n    color: #000;\n}\n\n.date-picker .dates.active{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n}\n\n.date-picker .dates .month {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border-bottom: 2px solid #eee;\n}\n\n.date-picker .dates .month .arrows {\n    width: 35px;\n    height: 35px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: #313131;\n    font-size: 20px;\n}\n\n.date-picker .dates .month .arrows:hover {\n    background-color: #f3f3f3;\n}\n\n.date-picker .dates .month .arrows:active {\n    background-color: #00ca85;\n}\n\n.date-picker .dates .days {\n    height: 200px;\n    display: grid;\n    grid-template-columns: repeat(7, 1fr);\n}\n\n.date-picker .dates .days .day {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: #313131;\n}\n\n.date-picker .dates .days .day.selected {\n    background-color: #00ca85;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,uBAAuB;IACvB,8BAA8B;AAClC;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,sBAAsB;AAC1B;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,WAAW;IACX,iCAAiC;IACjC,yBAAyB;AAC7B;;AAEA;IACI,eAAe;IACf,QAAQ;IACR,SAAS;IACT,4BAA4B;IAC5B,gCAAgC;EAClC;;AAEF;IACI,kBAAkB;IAClB,UAAU;AACd;;AAEA;IACI,0BAA0B;AAC9B;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,eAAe;IACf,mBAAmB;IACnB,6BAA6B;IAC7B,YAAY;AAChB;;AAEA;IACI,qCAAqC;IACrC,mBAAmB;IACnB,wBAAwB;AAC5B;;AAEA;IACI,QAAQ;IACR,SAAS;IACT,WAAW;IACX,aAAa;IACb,6BAA6B;IAC7B,eAAe;IACf,oCAAoC;AACxC;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,6BAA6B;AACjC;;AAEA;IACI,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,kBAAkB;IAClB,UAAU;IACV,WAAW;AACf;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,6BAA6B;AACjC;;AAEA;IACI,WAAW;IACX,aAAa;IACb,kBAAkB;IAClB,UAAU;AACd;;AAEA;IACI,UAAU;IACV,gBAAgB;IAChB,mBAAmB;IACnB,YAAY;IACZ,WAAW;IACX,oCAAoC;IACpC,eAAe;IACf,UAAU;IACV,SAAS;AACb;;AAEA;IACI,UAAU;IACV,mBAAmB;AACvB;;AAEA;IACI,UAAU;AACd;;AAEA;IACI,WAAW;IACX,gBAAgB;IAChB,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,sBAAsB;IACtB,2CAA2C;IAC3C,eAAe;IACf,iBAAiB;IACjB,aAAa;AACjB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,cAAc;IACd,eAAe;AACnB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,aAAa;IACb,kBAAkB;IAClB,SAAS;IACT,OAAO;IACP,QAAQ;IACR,sBAAsB;IACtB,WAAW;AACf;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,6BAA6B;AACjC;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,cAAc;IACd,eAAe;AACnB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,aAAa;IACb,aAAa;IACb,qCAAqC;AACzC;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,cAAc;AAClB;;AAEA;IACI,yBAAyB;AAC7B",sourcesContent:[":root {\n    --twitter-blue: #1DA1F2;\n    --sidebar-clr: rgb(36, 36, 36);\n}\n\n*{\n    padding: 0px;\n    margin: 0px;\n    box-sizing: border-box;\n}\n\nbody {\n    width: 100vw;\n    height: 100vh;\n    margin: 0px;\n    background-color: rgb(51, 51, 51);\n    color: rgb(219, 219, 219);\n}\n\n.centered {\n    position: fixed;\n    top: 25%;\n    left: 50%;\n    /* bring your own prefixes */\n    transform: translate(-50%, -50%);\n  }\n\n.hidden {\n    visibility: hidden;\n    opacity: 0;\n}\n\na{\n    color: var(--twitter-blue);\n}\n\n.highlight {\n    color: white;\n}\n\nbutton {\n    cursor: pointer;\n    font-weight: bolder;\n    background-color: transparent;\n    border: none;\n}\n\n#taskBtn {\n    background-color: var(--twitter-blue);\n    border-radius: 15px;\n    padding: 2vh 3vw 2vh 3vw;\n}\n\n#sidebar {\n    top: 0px;\n    left: 0px;\n    width: 15vw;\n    height: 100vh;\n    border-right: 1px solid black;\n    position: fixed;\n    background-color: var(--sidebar-clr);\n}\n\n#topStuff {\n    height: 30vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-evenly;\n}\n\n#profileStuff {\n    display: flex;\n    align-items: center;\n}\n\n#profilePic {\n    border-radius: 50%;\n    width: 4vw;\n    height: 4vw;\n}\n\n#bottomStuff {\n    height: 70vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-evenly;\n}\n\n#content {\n    width: 85vw;\n    height: 100vh;\n    position: absolute;\n    left: 15vw;\n}\n\n.contentDiv {\n    opacity: 0;\n    visibility: none;\n    border-radius: 10px;\n    height: 80vh;\n    width: 30vw;\n    background-color: var(--sidebar-clr);\n    position: fixed;\n    left: 18vw;\n    top: 10vh;\n}\n\n.contentDiv.active {\n    opacity: 1;\n    visibility: visible;\n}\n\n#sideDiv {\n    left: 55vw;\n}\n\n.date-picker {\n    width: 100%;\n    max-width: 320px;\n    height: 60px;\n    z-index: 30;\n    position: relative;\n    background-color: #fff;\n    box-shadow: 0px 3px 10px rgba(0, 0, 0, 0.2);\n    cursor: pointer;\n    user-select: none;\n    display: none;\n}\n\n.date-picker.active {\n    display: block;\n}\n\n.date-picker .selected-date {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: #313131;\n    font-size: 28px;\n}\n\n.date-picker:hover {\n    background-color: #F3F3F3;\n}\n\n#submitBtn {\n    height: 8vh;\n}\n\n#submitBtn:hover {\n    background-color: #F3F3F3;\n}\n\n.date-picker .dates {\n    display: none;\n    position: absolute;\n    top: 100%;\n    left: 0;\n    right: 0;\n    background-color: #fff;\n    color: #000;\n}\n\n.date-picker .dates.active{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n}\n\n.date-picker .dates .month {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border-bottom: 2px solid #eee;\n}\n\n.date-picker .dates .month .arrows {\n    width: 35px;\n    height: 35px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: #313131;\n    font-size: 20px;\n}\n\n.date-picker .dates .month .arrows:hover {\n    background-color: #f3f3f3;\n}\n\n.date-picker .dates .month .arrows:active {\n    background-color: #00ca85;\n}\n\n.date-picker .dates .days {\n    height: 200px;\n    display: grid;\n    grid-template-columns: repeat(7, 1fr);\n}\n\n.date-picker .dates .days .day {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: #313131;\n}\n\n.date-picker .dates .days .day.selected {\n    background-color: #00ca85;\n}"],sourceRoot:""}]);const a=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,A,o){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var a=0;a<this.length;a++){var c=this[a][0];null!=c&&(i[c]=!0)}for(var s=0;s<n.length;s++){var d=[].concat(n[s]);r&&i[d[0]]||(void 0!==o&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=o),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),A&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=A):d[4]="".concat(A)),e.push(d))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),A="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(A," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([o]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var o={},i=[],a=0;a<n.length;a++){var c=n[a],s=r.base?c[0]+r.base:c[0],d=o[s]||0,l="".concat(s," ").concat(d);o[s]=d+1;var p=t(l),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var f=A(u,r);r.byIndex=a,e.splice(a,0,{identifier:l,updater:f,references:1})}i.push(l)}return i}function A(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,A){var o=r(n=n||[],A=A||{});return function(n){n=n||[];for(var i=0;i<o.length;i++){var a=t(o[i]);e[a].references--}for(var c=r(n,A),s=0;s<o.length;s++){var d=t(o[s]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}o=c}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var A=void 0!==t.layer;A&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,A&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var A=e[r];if(void 0!==A)return A.exports;var o=e[r]={id:r,exports:{}};return n[r](o,o.exports,t),o.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),A=t.n(r),o=t(569),i=t.n(o),a=t(565),c=t.n(a),s=t(216),d=t.n(s),l=t(589),p=t.n(l),u=t(426),f={};f.styleTagTransform=p(),f.setAttributes=c(),f.insert=i().bind(null,"head"),f.domAPI=A(),f.insertStyleElement=d(),e()(u.Z,f),u.Z&&u.Z.locals&&u.Z.locals,t.p;const C=(()=>{const n=document.querySelector(".date-picker"),e=document.querySelector(".date-picker .selected-date"),t=document.querySelector(".date-picker .dates"),r=document.querySelector(".date-picker .dates .month .mth"),A=document.querySelector(".date-picker .dates .month .next-mth"),o=document.querySelector(".date-picker .dates .month .prev-mth"),i=document.querySelector(".date-picker .dates .days"),a=["January","February","March","April","May","June","July","August","September","October","November","December"];let c=new Date,s=c.getDate(),d=c.getMonth(),l=c.getFullYear(),p=c,u=s,f=d,C=l;function h(n){i.innerHTML="";let t=function(n,e){return n++,new Date(e,n,0).getDate()}(d,l);for(let n=0;n<t;n++){const t=document.createElement("div");t.classList.add("day"),t.textContent=n+1,u==n+1&&C==l&&f==d&&t.classList.add("selected"),t.addEventListener("click",(function(){p=new Date(l+"-"+(d+1)+"-"+(n+1)),u=n+1,f=d,C=l,e.textContent=v(p),e.dataset.value=p,h()})),i.appendChild(t)}}function v(n){let e=n.getDate();e<10&&(e="0"+e);let t=n.getMonth()+1;return t<10&&(t="0"+t),t+" / "+e+" / "+n.getFullYear()}return r.textContent=a[d]+" "+l,e.textContent=v(c),e.dataset.value=p,h(),n.addEventListener("click",(function(n){(function(n,e){for(let e=0;e<n.length;e++)if(n[e].classList&&n[e].classList.contains("dates"))return!0;return!1})(n.path)||t.classList.toggle("active")})),A.addEventListener("click",(function(){d++,d>11&&(d=0,l++),r.textContent=a[d]+" "+l,h()})),o.addEventListener("click",(function(){d--,d<0&&(d=11,l--),r.textContent=a[d]+" "+l,h()})),{runDatePicker:function(){n.classList.toggle("active")}}})();document.querySelector("#submitBtn").addEventListener("click",(function(){C.runDatePicker()})),document.querySelector("#taskBtn").addEventListener("click",(function(){C.runDatePicker()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,