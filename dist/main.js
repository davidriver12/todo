(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>a});var r=t(537),i=t.n(r),A=t(645),o=t.n(A)()(i());o.push([n.id,":root {\n    --twitter-blue: #1DA1F2;\n    --sidebar-clr: rgb(36, 36, 36);\n}\n\n*{\n    padding: 0px;\n    margin: 0px;\n    box-sizing: border-box;\n}\n\nbody {\n    width: 100vw;\n    height: 100vh;\n    margin: 0px;\n    background-color: rgb(51, 51, 51);\n    color: rgb(219, 219, 219);\n}\n\nh2 {\n    color: black;\n}\n\n.centered {\n    position: fixed;\n    top: 25%;\n    left: 50%;\n    /* bring your own prefixes */\n    transform: translate(-50%, -50%);\n  }\n\n.hidden {\n    visibility: hidden;\n    opacity: 0;\n}\n\na{\n    color: var(--twitter-blue);\n}\n\n.highlight {\n    color: white;\n}\n\nbutton {\n    color: #fff;\n    cursor: pointer;\n    font-weight: bolder;\n    background-color: transparent;\n    border: none;\n}\n\n#taskBtn {\n    background-color: var(--twitter-blue);\n    border-radius: 15px;\n    padding: 2vh 3vw 2vh 3vw;\n}\n\n#projectBtn {\n    background-color: var(--twitter-blue);\n    border-radius: 15px;\n    padding: 2vh 3vw 2vh 3vw;\n    width: 10vw;\n}\n\n#sidebar {\n    top: 0px;\n    left: 0px;\n    width: 15vw;\n    height: 100vh;\n    border-right: 1px solid black;\n    position: fixed;\n    background-color: var(--sidebar-clr);\n}\n\n#topStuff {\n    height: 30vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-evenly;\n}\n\n#profileStuff {\n    display: flex;\n    align-items: center;\n}\n\n#profilePic {\n    border-radius: 50%;\n    width: 4vw;\n    height: 4vw;\n}\n\n#bottomStuff {\n    height: 70vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-evenly;\n}\n\n#content {\n    width: 85vw;\n    height: 100vh;\n    position: absolute;\n    left: 15vw;\n}\n\n.contentDiv {\n    opacity: 0;\n    visibility: none;\n    border-radius: 10px;\n    height: 80vh;\n    width: 30vw;\n    background-color: var(--sidebar-clr);\n    position: fixed;\n    left: 18vw;\n    bottom: 5vh;\n}\n\n.contentDiv.active {\n    opacity: 1;\n    visibility: visible;\n}\n\n#sideDiv {\n    left: 55vw;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-evenly;\n}\n\n.date-picker {\n    width: 100%;\n    max-width: 320px;\n    height: 70px;\n    z-index: 30;\n    position: relative;\n    background-color: #fff;\n    box-shadow: 0px 3px 10px rgba(0, 0, 0, 0.2);\n    cursor: pointer;\n    user-select: none;\n    display: none;\n}\n\n.date-picker.active {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.date-picker .selected-date {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: #313131;\n    font-size: 28px;\n}\n\n.date-picker:hover {\n    background-color: #F3F3F3;\n}\n\n.submitBtn {\n    width: 100%;\n    height: 8vh;\n}\n\n.submitBtn:hover {\n    background-color: #F3F3F3;\n}\n\n.date-picker .dates {\n    display: none;\n    position: absolute;\n    top: 100%;\n    left: 0;\n    right: 0;\n    background-color: #fff;\n    color: #000;\n}\n\n.date-picker .dates.active{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n}\n\n.date-picker .dates .month {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border-bottom: 2px solid #eee;\n}\n\n.date-picker .dates .month .arrows {\n    width: 35px;\n    height: 35px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: #313131;\n    font-size: 20px;\n}\n\n.date-picker .dates .month .arrows:hover {\n    background-color: #f3f3f3;\n}\n\n.date-picker .dates .month .arrows:active {\n    background-color: #00ca85;\n}\n\n.date-picker .dates .days {\n    height: 200px;\n    display: grid;\n    grid-template-columns: repeat(7, 1fr);\n}\n\n.date-picker .dates .days .day {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: #313131;\n}\n\n.date-picker .dates .days .day.selected {\n    background-color: #00ca85;\n}\n\n.modal-bg.centered {\n    top: 50%;\n    background-color: #fff;\n    width: 40vw;\n    height: 50vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.modal {\n    color: #000;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-around;\n}\n\n.task-card {\n    margin: 10px;\n    display: flex;\n}\n\n.task-card-text {\n    flex-grow: 1;\n    margin-left: 10px;\n    cursor: pointer;\n}\n\n.icon-div {\n    background-color: var(--sidebar-clr);\n    position: fixed;\n    top: 2vh;\n    right: 25vw;\n    height: 50px;\n    width: 200px;\n    border-radius: 20px;\n    padding: 1vw;\n    display: flex;\n    justify-content: space-between ;\n    align-items: center;\n}\n\n.icon-div img{\n    width: 2vw;\n    height: 2vw;\n}\n\n.premium-div {\n    background-color: var(--sidebar-clr);\n    position: fixed;\n    top: 2vh;\n    right: 5vw;\n    height: 50px;\n    width: 150px;\n    border-radius: 20px;\n    padding: 1vw;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:[":root {\n    --twitter-blue: #1DA1F2;\n    --sidebar-clr: rgb(36, 36, 36);\n}\n\n*{\n    padding: 0px;\n    margin: 0px;\n    box-sizing: border-box;\n}\n\nbody {\n    width: 100vw;\n    height: 100vh;\n    margin: 0px;\n    background-color: rgb(51, 51, 51);\n    color: rgb(219, 219, 219);\n}\n\nh2 {\n    color: black;\n}\n\n.centered {\n    position: fixed;\n    top: 25%;\n    left: 50%;\n    /* bring your own prefixes */\n    transform: translate(-50%, -50%);\n  }\n\n.hidden {\n    visibility: hidden;\n    opacity: 0;\n}\n\na{\n    color: var(--twitter-blue);\n}\n\n.highlight {\n    color: white;\n}\n\nbutton {\n    color: #fff;\n    cursor: pointer;\n    font-weight: bolder;\n    background-color: transparent;\n    border: none;\n}\n\n#taskBtn {\n    background-color: var(--twitter-blue);\n    border-radius: 15px;\n    padding: 2vh 3vw 2vh 3vw;\n}\n\n#projectBtn {\n    background-color: var(--twitter-blue);\n    border-radius: 15px;\n    padding: 2vh 3vw 2vh 3vw;\n    width: 10vw;\n}\n\n#sidebar {\n    top: 0px;\n    left: 0px;\n    width: 15vw;\n    height: 100vh;\n    border-right: 1px solid black;\n    position: fixed;\n    background-color: var(--sidebar-clr);\n}\n\n#topStuff {\n    height: 30vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-evenly;\n}\n\n#profileStuff {\n    display: flex;\n    align-items: center;\n}\n\n#profilePic {\n    border-radius: 50%;\n    width: 4vw;\n    height: 4vw;\n}\n\n#bottomStuff {\n    height: 70vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-evenly;\n}\n\n#content {\n    width: 85vw;\n    height: 100vh;\n    position: absolute;\n    left: 15vw;\n}\n\n.contentDiv {\n    opacity: 0;\n    visibility: none;\n    border-radius: 10px;\n    height: 80vh;\n    width: 30vw;\n    background-color: var(--sidebar-clr);\n    position: fixed;\n    left: 18vw;\n    bottom: 5vh;\n}\n\n.contentDiv.active {\n    opacity: 1;\n    visibility: visible;\n}\n\n#sideDiv {\n    left: 55vw;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-evenly;\n}\n\n.date-picker {\n    width: 100%;\n    max-width: 320px;\n    height: 70px;\n    z-index: 30;\n    position: relative;\n    background-color: #fff;\n    box-shadow: 0px 3px 10px rgba(0, 0, 0, 0.2);\n    cursor: pointer;\n    user-select: none;\n    display: none;\n}\n\n.date-picker.active {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.date-picker .selected-date {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: #313131;\n    font-size: 28px;\n}\n\n.date-picker:hover {\n    background-color: #F3F3F3;\n}\n\n.submitBtn {\n    width: 100%;\n    height: 8vh;\n}\n\n.submitBtn:hover {\n    background-color: #F3F3F3;\n}\n\n.date-picker .dates {\n    display: none;\n    position: absolute;\n    top: 100%;\n    left: 0;\n    right: 0;\n    background-color: #fff;\n    color: #000;\n}\n\n.date-picker .dates.active{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n}\n\n.date-picker .dates .month {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border-bottom: 2px solid #eee;\n}\n\n.date-picker .dates .month .arrows {\n    width: 35px;\n    height: 35px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: #313131;\n    font-size: 20px;\n}\n\n.date-picker .dates .month .arrows:hover {\n    background-color: #f3f3f3;\n}\n\n.date-picker .dates .month .arrows:active {\n    background-color: #00ca85;\n}\n\n.date-picker .dates .days {\n    height: 200px;\n    display: grid;\n    grid-template-columns: repeat(7, 1fr);\n}\n\n.date-picker .dates .days .day {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: #313131;\n}\n\n.date-picker .dates .days .day.selected {\n    background-color: #00ca85;\n}\n\n.modal-bg.centered {\n    top: 50%;\n    background-color: #fff;\n    width: 40vw;\n    height: 50vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.modal {\n    color: #000;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-around;\n}\n\n.task-card {\n    margin: 10px;\n    display: flex;\n}\n\n.task-card-text {\n    flex-grow: 1;\n    margin-left: 10px;\n    cursor: pointer;\n}\n\n.icon-div {\n    background-color: var(--sidebar-clr);\n    position: fixed;\n    top: 2vh;\n    right: 25vw;\n    height: 50px;\n    width: 200px;\n    border-radius: 20px;\n    padding: 1vw;\n    display: flex;\n    justify-content: space-between ;\n    align-items: center;\n}\n\n.icon-div img{\n    width: 2vw;\n    height: 2vw;\n}\n\n.premium-div {\n    background-color: var(--sidebar-clr);\n    position: fixed;\n    top: 2vh;\n    right: 5vw;\n    height: 50px;\n    width: 150px;\n    border-radius: 20px;\n    padding: 1vw;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}"],sourceRoot:""}]);const a=o},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,i,A){"string"==typeof n&&(n=[[null,n,void 0]]);var o={};if(r)for(var a=0;a<this.length;a++){var c=this[a][0];null!=c&&(o[c]=!0)}for(var d=0;d<n.length;d++){var l=[].concat(n[d]);r&&o[l[0]]||(void 0!==A&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=A),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),i&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=i):l[4]="".concat(i)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),A="/*# ".concat(i," */"),o=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(o).concat([A]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var A={},o=[],a=0;a<n.length;a++){var c=n[a],d=r.base?c[0]+r.base:c[0],l=A[d]||0,s="".concat(d," ").concat(l);A[d]=l+1;var u=t(s),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var C=i(p,r);r.byIndex=a,e.splice(a,0,{identifier:s,updater:C,references:1})}o.push(s)}return o}function i(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,i){var A=r(n=n||[],i=i||{});return function(n){n=n||[];for(var o=0;o<A.length;o++){var a=t(A[o]);e[a].references--}for(var c=r(n,i),d=0;d<A.length;d++){var l=t(A[d]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}A=c}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var i=void 0!==t.layer;i&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,i&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var A=t.sourceMap;A&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(A))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var i=e[r];if(void 0!==i)return i.exports;var A=e[r]={id:r,exports:{}};return n[r](A,A.exports,t),A.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),i=t.n(r),A=t(569),o=t.n(A),a=t(565),c=t.n(a),d=t(216),l=t.n(d),s=t(589),u=t.n(s),p=t(426),C={};C.styleTagTransform=u(),C.setAttributes=c(),C.insert=o().bind(null,"head"),C.domAPI=i(),C.insertStyleElement=l(),e()(p.Z,C),p.Z&&p.Z.locals&&p.Z.locals,t.p;const m=(()=>{const n=n=>{let e=document.querySelector("#sideDiv");e.innerHTML="";let t=document.createElement("h1");t.textContent=`${n.title}`;let r=document.createElement("h3");r.textContent="Description: ";let i=document.createElement("p");i.textContent=`${n.description}`;let A=document.createElement("p");A.textContent=`${n.priority}`,e.appendChild(t),e.appendChild(r),e.appendChild(i),e.appendChild(A)},e=()=>{let n=document.querySelector("#sideDiv");n.classList.contains("active")||n.classList.add("active")};return{createTaskDetail:n,createTaskCard:(t,r)=>{let i=document.createElement("div");i.classList.add("task-card");let A=document.createElement("input");A.setAttribute("type","checkbox");let o=document.createElement("div");o.classList.add("task-card-text"),o.addEventListener("click",(function(){e(),n(r)}));let a=document.createElement("h3");a.textContent=`${r.title}`,o.appendChild(a);let c=document.createElement("p");c.textContent=r.dueDate,o.appendChild(c),i.appendChild(A),i.appendChild(o),t.appendChild(i)},showSideDiv:e}})(),h=(()=>{const n=document.querySelector(".date-picker"),e=document.querySelector(".date-picker .selected-date"),t=document.querySelector(".date-picker .dates"),r=document.querySelector(".date-picker .dates .month .mth"),i=document.querySelector(".date-picker .dates .month .next-mth"),A=document.querySelector(".date-picker .dates .month .prev-mth"),o=document.querySelector(".date-picker .dates .days"),a=["January","February","March","April","May","June","July","August","September","October","November","December"];let c=new Date,d=c.getDate(),l=c.getMonth(),s=c.getFullYear(),u=c,p=d,C=l,m=s;function h(n){o.innerHTML="";let t=function(n,e){return n++,new Date(e,n,0).getDate()}(l,s);for(let n=0;n<t;n++){const t=document.createElement("div");t.classList.add("day"),t.textContent=n+1,p==n+1&&m==s&&C==l&&t.classList.add("selected"),t.addEventListener("click",(function(){u=new Date(s+"-"+(l+1)+"-"+(n+1)),p=n+1,C=l,m=s,e.textContent=v(u),e.dataset.value=f(u),h()})),o.appendChild(t)}}function f(n){return c=n.toDateString(),c}function v(n){let e=n.getDate();e<10&&(e="0"+e);let t=n.getMonth()+1;return t<10&&(t="0"+t),t+" / "+e+" / "+n.getFullYear()}return r.textContent=a[l]+" "+s,e.textContent=v(c),e.dataset.value=f(u),h(),n.addEventListener("click",(function(n){(function(n,e){for(let e=0;e<n.length;e++)if(n[e].classList&&n[e].classList.contains("dates"))return!0;return!1})(n.path)||t.classList.toggle("active")})),i.addEventListener("click",(function(){l++,l>11&&(l=0,s++),r.textContent=a[l]+" "+s,h()})),A.addEventListener("click",(function(){l--,l<0&&(l=11,s--),r.textContent=a[l]+" "+s,h()})),{runDatePicker:function(){n.classList.toggle("active")}}})(),f=()=>{let n=document.querySelector("body"),e=document.createElement("div");e.classList.add("modal-bg"),e.classList.add("centered");let t=document.createElement("div");t.classList.add("modal");let r=document.createElement("label");r.setAttribute("for","title"),r.textContent="Task Title: ";let i=document.createElement("input");i.setAttribute("type","text"),i.setAttribute("name","title"),i.setAttribute("id","title");let A=document.createElement("label");A.setAttribute("for","description"),A.textContent="Task Description: ";let o=document.createElement("textarea");o.setAttribute("name","description"),o.setAttribute("id","description"),o.setAttribute("rows","8"),o.setAttribute("cols","30");let a=document.createElement("button");a.classList.add("submitBtn"),a.setAttribute("id","submitBtn2"),a.textContent="Submit";let c=document.createElement("div");c.setAttribute("id","radioBtnContainer");let d=document.createElement("p");d.textContent="Task priority: ",c.appendChild(d);let l=document.createElement("ul"),s=document.createElement("li"),u=document.createElement("label");u.setAttribute("for","standard"),u.textContent="Standard";let p=document.createElement("input");p.setAttribute("checked",!0),p.setAttribute("type","radio"),p.setAttribute("id","standard"),p.setAttribute("name","priority"),p.setAttribute("value","standard"),s.appendChild(u),s.appendChild(p),l.appendChild(s);let C=document.createElement("li"),m=document.createElement("label");m.setAttribute("for","important"),m.textContent="Important";let h=document.createElement("input");h.setAttribute("type","radio"),h.setAttribute("id","important"),h.setAttribute("name","priority"),h.setAttribute("value","important"),C.appendChild(m),C.appendChild(h),l.appendChild(C);let f=document.createElement("li"),v=document.createElement("label");v.setAttribute("for","urgent"),v.textContent="Urgent";let b=document.createElement("input");b.setAttribute("type","radio"),b.setAttribute("id","urgent"),b.setAttribute("name","priority"),b.setAttribute("value","urgent"),f.appendChild(v),f.appendChild(b),l.appendChild(f),c.appendChild(l),t.appendChild(r),t.appendChild(i),t.appendChild(A),t.appendChild(o),t.appendChild(c),t.appendChild(a),e.appendChild(t),n.appendChild(e)},v=()=>document.querySelector(".selected-date").getAttribute("data-value"),b=()=>document.querySelector("input#title").value,I=()=>document.querySelector("textarea#description").value,B=()=>document.querySelector("input#standard").checked?"standard":document.querySelector("input#important").checked?"important":document.querySelector("input#urgent").checked?"urgent":void 0,g={createTask:function(n,e,t,r){return{dueDate:n,title:e,description:t,priority:r}},tasks:[]};document.querySelector("#submitBtn").addEventListener("click",(function(){let n=v();h.runDatePicker(),f(),document.querySelector("#submitBtn2").addEventListener("click",(function(){let e=b(),t=I(),r=B(),i=g.createTask(n,e,t,r);g.tasks.push(i),document.querySelector(".modal-bg").remove();let A=document.querySelector("#mainDiv");m.createTaskCard(A,i),console.log(g.tasks)}))})),document.querySelector("#taskBtn").addEventListener("click",(function(){h.runDatePicker()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,